name: 'Install Dependencies'
description: 'Install vcpkg libraries and qt environment'
inputs:
  vcpkg_libs:
    description: 'vcpkg libraries'
    required: false
    default: 'breakpad crashpad freeimage giflib opencv[contrib,thread]'
    type: string
  qt_modules:
    description: 'qt modules'
    required: false
    default: 'qt5compat qtnetworkauth qtimageformats'
    type: string
  qt_ver:
    description: 'qt version'
    required: false
    default: '6.9.2'
    type: string

runs:
  using: 'composite'

  steps:
    - name: Install Custom VCPKG
      uses: RealChuan/install-vcpkg@main
        
    - name: Delete vcpkg.json
      shell: bash
      run: |
        rm vcpkg.json

    - name: Cache windows vcpkg
      if: runner.os == 'Windows'
      uses: actions/cache@v4
      with: 
        path: C:\vcpkg\installed
        key: ${{ runner.os }}-vcpkg-installed-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-installed-
          ${{ runner.os }}-

    - name: Cache macos or linux vcpkg
      if: runner.os == 'macOS' || runner.os == 'Linux'
      uses: actions/cache@v4
      with: 
        path: /usr/local/share/vcpkg/installed
        key: ${{ runner.os }}-vcpkg-installed-${{ github.sha }}
        restore-keys: |
           ${{ runner.os }}-vcpkg-installed-
           ${{ runner.os }}-

    - name: Install dependencies on windows
      if: runner.os == 'Windows'
      shell: bash
      run: |
        choco install ninja
        ninja --version
        cmake --version
        vcpkg install ${{ inputs.vcpkg_libs }} --triplet x64-windows || (cat C:/vcpkg/installed/vcpkg/issue_body.md && exit 1)

    - name: Install dependencies on macos
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install python-setuptools
        ninja --version
        cmake --version
        clang --version
        vcpkg install ${{ inputs.vcpkg_libs }} --triplet arm64-osx || (cat /usr/local/share/vcpkg/installed/vcpkg/issue_body.md && exit 1)

    - name: Install dependencies on linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build build-essential libgl1-mesa-dev clang \
          libltdl-dev libxi-dev libxtst-dev libx11-dev libxft-dev libxext-dev libxrandr-dev
        ninja --version
        cmake --version
        gcc --version
        vcpkg install ${{ inputs.vcpkg_libs }} --triplet x64-linux || (cat /usr/local/share/vcpkg/installed/vcpkg/issue_body.md && exit 1)

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ inputs.qt_ver }}
        modules: ${{ inputs.qt_modules }}
        cache: 'true'  
