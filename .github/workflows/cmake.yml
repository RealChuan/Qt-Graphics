name: CMake Build

on: 
  push:
    paths-ignore:
        - 'docs/**'
        - '.clang-format'
        - '.gitignore'
        - 'LICENSE'
        - 'README*'
  pull_request:
    paths-ignore:
        - 'docs/**'
        - '.clang-format'
        - '.gitignore'
        - 'LICENSE'
        - 'README*'

env:
  MACOSX_DEPLOYMENT_TARGET: 12.0

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        build_type:
          - "RelWithDebInfo"
        generators:
          - "Ninja"

    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 1
          
      - uses: ./.github/actions/install-dependencies
        with:
          os_name: ${{ matrix.os }}

      - name: Configure and build windows
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          .\scripts\windows\setVsDev.ps1
          cmake `
            -S . `
            -B ./build `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -G "${{ matrix.generators }}"
          cmake --build ./build --config ${{ matrix.build_type }}
      - name: Configure and build on macos
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          cmake \
            -S . \
            -B ./build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DBUILD_VULKAN=OFF \
            -G "${{ matrix.generators }}"
          cmake --build ./build --config ${{ matrix.build_type }}
      - name: Configure and build on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          cmake \
            -S . \
            -B ./build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -G "${{ matrix.generators }}"
          cmake --build ./build --config ${{ matrix.build_type }}
          