name: CMake Build

on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'qmake/**'
      - 'translations/**'
      - '**/*.md'
      - '**/*.txt'
      - '**/.clang-*'
      - '**/.gitignore'
      - '**/*.pri'
      - '**/LICENSE*'
      - '**/*.pro'
      - '**/README*'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'qmake/**'
      - 'translations/**'
      - '**/*.md'
      - '**/*.txt'
      - '**/.clang-*'
      - '**/.gitignore'
      - '**/*.pri'
      - '**/LICENSE*'
      - '**/*.pro'
      - '**/README*'

env:
  MACOSX_DEPLOYMENT_TARGET: '13.0'
  BUILD_DIR: build
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
          - macos-latest
        generators:
          - "Ninja"
        arch:
          - x86_64
        include:
          - os: macos-latest
            generators: "Ninja"
            arch: arm64

    steps:
      - uses: actions/checkout@v5
        with: 
          fetch-depth: 1
          
      - uses: ./.github/actions/install-dependencies

      - name: Configure and build windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          .\packaging\windows\Enter-VsDevShell.ps1
          cmake `
            -S . `
            -B "${{ env.BUILD_DIR }}" `
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} `
            -G "${{ matrix.generators }}"
          cmake --build "${{ env.BUILD_DIR }}" --config ${{ env.BUILD_TYPE }}

      - name: Configure and build ubuntu
        if: runner.os == 'Linux'
        shell: bash
        run: |
          cmake \
            -S . \
            -B "${{ env.BUILD_DIR }}" \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -G "${{ matrix.generators }}"
          cmake --build "${{ env.BUILD_DIR }}" --config ${{ env.BUILD_TYPE }}

      - name: Configure and build macos
        if: runner.os == 'macOS'
        shell: bash
        run: |
          cmake \
            -S . \
            -B "${{ env.BUILD_DIR }}" \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DCMAKE_OSX_ARCHITECTURES="${{ matrix.arch }}" \
            -G "${{ matrix.generators }}"
          cmake --build "${{ env.BUILD_DIR }}" --config ${{ env.BUILD_TYPE }}
          
      - name: Display binary directory tree (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd binaries/
          cmd /c tree /f

      - name: Display binary directory tree (Unix-like)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        shell: bash
        run: |
          cd binaries/
          tree